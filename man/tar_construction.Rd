% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_construction.R
\name{tar_construction}
\alias{tar_construction}
\title{Consensus structural classifications}
\usage{
tar_construction(
  name,
  x = NULL,
  library_path = "data/structural_classifications",
  db = "kegg",
  organism = character(),
  threshold = 50,
  classyfireR_cache = "data/structural_classifications/classyfireR_cache.db",
  plots = "sankey",
  summary = TRUE,
  export_path = "exports/structural_classifications"
)
}
\arguments{
\item{name}{Symbol. The name for the collection of targets. This serves as a prefix for target names.}

\item{x}{An S4 object of class \code{Assignment}.  If \code{NULL}, target input will be expected from an existing target. See details.}

\item{library_path}{the target file path for the classification library in which to store consensus classification data}

\item{db}{the databases to search. This can either be \code{kegg} and/or \code{pubchem}.}

\item{organism}{the KEGG organism ID. This is Ignored if argument \code{db} is set to \code{pubchem}}

\item{threshold}{the percentage majority threshold for consensus classification}

\item{classyfireR_cache}{the file path for a \code{classyfireR} cache. See the documentation of \code{classyfireR::get_classification} for more details.}

\item{plots}{A character vector of plot types. Set to \code{NULL} to skip all plots.}

\item{summary}{Boolean. Include additional summary targets.}

\item{export_path}{Destination path of export files. Set to \code{NULL} to skip exports.}
}
\value{
A list of target objects for consensus structural classifications.
}
\description{
Targets for consensus structural classification
}
\details{
Specifying argument \code{x} as \code{NULL} enables the use of input from the \code{tar_mf_assignment()} target factory, See the second example below.
}
\examples{
\dontrun{
## Perform consensus structural classification by specifying assignments directly
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        
        mf_assignments <- assignments::assignMFs(
            assignments::feature_data,
            parameters = assignments::assignmentParameters('FIE-HRMS')
        )
        
        list(
            tar_construction(
                example,
                mf_assignments,
                library_path = paste0(tempdir(),'/construction_library'),
                classyfireR_cache = paste0(tempdir(),'/classyfireR_cache.db')
            )
        )
    })
    targets::tar_make()
    targets::tar_read(example_plot_sankey)
})

## Perform consensus structural classification by using inputs from other target factories.
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        name <- rlang::expr(example)
        
        list(
            tar_input_piggyback(!!name,
                                'FIE-HRMS_BdistachyonTechnical',
                                repo = 'jasenfinch/metaboData'),
            tar_spectral_binning(!!name),
            tar_pre_treatment(!!name),
            tar_mf_assignment(!!name),
            tar_construction(!!name,
                             library_path = paste0(tempdir(),'/construction_library'),
                             classyfireR_cache = paste0(tempdir(),'/classyfireR_cache.db')
            )
        )
    })
    targets::tar_make()
    targets::tar_read(example_summary_construction)
})
}
}
