% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_input_piggyback.R
\name{tar_input_piggyback}
\alias{tar_input_piggyback}
\title{Workflow input from a GitHub release}
\usage{
tar_input_piggyback(
  name,
  tag,
  file = NULL,
  dest = paste0("data/", tag),
  sample_info_file = "runinfo.csv",
  ext = ".mzML.gz",
  repo = guess_repo(),
  overwrite = TRUE,
  ignore = "manifest.json",
  use_timestamps = TRUE,
  show_progress = TRUE,
  .token = gh::gh_token()
)
}
\arguments{
\item{name}{Symbol. The name for the collection of targets. This serves as a prefix for target names.}

\item{tag}{tag for the GitHub release to which this data should be attached.}

\item{file}{name or vector of names of files to be downloaded. If \code{NULL},
all assets attached to the release will be downloaded.}

\item{dest}{The directory destination of the downloaded release data.}

\item{sample_info_file}{The name of the file included in the release that contains the sample information.}

\item{ext}{The file extension of the converted (mzML) data files.}

\item{repo}{Repository name in format "owner/repo". Defaults to \code{guess_repo()}.}

\item{overwrite}{Should any local files of the same name be overwritten?
default \code{TRUE}.}

\item{ignore}{a list of files to ignore (if downloading "all" because
\code{file=NULL}).}

\item{use_timestamps}{DEPRECATED.}

\item{show_progress}{logical, show a progress bar be shown for uploading?
Defaults to \verb{[interactive()]} - can also set globally with options("piggyback.verbose")}

\item{.token}{GitHub authentication token, see \verb{[gh::gh_token()]}}
}
\value{
A list of target objects specifically for analysis pipeline input data retrieval using \code{piggyback}.
}
\description{
Targets for workflow input for mzML data files and sample information stored in a GitHub release using the \code{piggyback} R package.
}
\examples{
\dontrun{
## Example piggyback input
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        list(
            tar_input_piggyback(example,
                                'FIE-HRMS_BdistachyonTechnical',
                                repo = 'jasenfinch/metaboData')
        )
    })
    targets::tar_make()
    targets::tar_read(example_sample_information)
})
}
}
