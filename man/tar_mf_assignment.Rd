% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_MF_assignment.R
\name{tar_mf_assignment}
\alias{tar_mf_assignment}
\title{Molecular formula assignment}
\usage{
tar_mf_assignment(
  name,
  feature_data = NULL,
  parameters = MFassign::assignmentParameters("FIE"),
  verbose = TRUE,
  summary = TRUE,
  export_path = "exports/molecular_formula_assignments"
)
}
\arguments{
\item{name}{Symbol. The name for the collection of targets. This serves as a prefix for target names.}

\item{feature_data}{A tibble containing a feature intensity matrix for which to assign molecular formulas. If \code{NULL}, target input will be expected from an existing target. See details.}

\item{parameters}{S4 object of class \code{AssignmentParameters}.}

\item{verbose}{Show assignment console output.}

\item{summary}{Boolean. Include additional summary targets.}

\item{export_path}{Destination path of export files. Set to \code{NULL} to skip exports.}
}
\value{
A list of target objects for molecular formula assignment.
}
\description{
Targets for molecular formula assignment.
}
\details{
Specifying argument \code{feature_data} as \code{NULL} enables the use of input from the \code{tar_pre_treatment()} target factory, See the second example below.
}
\examples{
\dontrun{
## Perform molecular formula assignment by specifying the feature data directly
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        
        list(
            tar_mf_assignment(MFassign::feature_data)
        )
    })
    targets::tar_make()
    targets::tar_read(example_summary_assignments)
})

## Perform molecular formula assignment by using `tar_input_piggyback()`,
## `tar_input_spectral_binning()` and `tar_pre_treatment()` 
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        name <- rlang::expr(example)
        
        list(
            tar_input_piggyback(!!name,
                                'FIE-HRMS_BdistachyonTechnical',
                                repo = 'jasenfinch/metaboData'),
            tar_spectral_binning(!!name),
            tar_pre_treatment(!!name),
            tar_mf_assignment(!!name)
        )
    })
    targets::tar_make()
    targets::tar_read(example_results_spectral_processing)
    targets::tar_read(example_summary_assignments)
})
}
}
