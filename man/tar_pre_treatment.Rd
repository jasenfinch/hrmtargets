% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_pre_treatment.R
\name{tar_pre_treatment}
\alias{tar_pre_treatment}
\title{Pre-treatment of spectrally processed data}
\usage{
tar_pre_treatment(
  name,
  spectral_processed = NULL,
  parameters = NULL,
  cls = "class",
  QCidx = "QC",
  verbose = TRUE,
  plots = c("PCA", "LDA", "unsupervised_RF", "supervised_RF"),
  exports = TRUE,
  export_path = "exports/pre-treated"
)
}
\arguments{
\item{name}{Symbol. The name for the collection of targets. This serves as a prefix for target names.}

\item{spectral_processed}{S4 object of class \code{Binalysis} or \code{MetaboProfile}. If \code{NULL}, target input will be expected from an existing target. See details.}

\item{parameters}{S4 object of class \code{AnalysisParameters} containing pre-treatment parameters. If \code{NULL}, \code{metaboMisc::detectPretreatmentParameters()} will be used to detect the pre-treatment parameters based on the \code{cls} argument.}

\item{cls}{The name of the sample information table column containing the sample class information for parameter detection and plotting. Ignored for parameters if argument \code{parameters} is not \code{NULL}.}

\item{QCidx}{QC sample class label. Ignored if argument \code{parameters} is not \code{NULL}.}

\item{verbose}{Show pre-treatment console output.}

\item{plots}{A character vector of plot types. Set to \code{NULL} to skip all plots.}

\item{exports}{Boolean. Include additional export targets.}

\item{export_path}{Destination path of export files. Ignored if argument \code{exports = FALSE}.}
}
\value{
A list of target objects for processing \code{mzML} data files using spectral binning.
}
\description{
Targets for pre-treatment of spectral processed data.
}
\details{
Specifying argument \code{spectral_processed} as \code{NULL} enables the use additional target factories outputing spectrally processed data. See the examples below.
}
\examples{
\dontrun{
## Perform pre-treatment by specifying the spectrally processed data directly
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        file_paths <- metaboData::filePaths('FIE-HRMS','UrineTechnical',
                                            ask = FALSE)
        sample_info <- metaboData::runinfo('FIE-HRMS','UrineTechnical',
                                           ask = FALSE)
        spectral_processed <- binneR::binneRlyse(file_paths,
                                                 sample_info,
                                                 binneR::detectParameters(file_paths))
        
        list(
            tar_pre_treatment(example,
                              spectral_processed = spectral_processed)
        )
    })
    targets::tar_make()
    targets::tar_read(example_results_pre_treatment)
    targets::tar_read(example_plot_PCA)
})

## Perform pre-treatment by combining the use of 
## `tar_input_piggyback()` and `tar_spectral_binning()` 
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        name <- rlang::expr(example)
        
        list(
            tar_input_piggyback(!!name,
                                'FIE-HRMS_BdistachyonTechnical',
                                repo = 'jasenfinch/metaboData'),
            tar_spectral_binning(!!name),
            tar_pre_treatment(!!name)
        )
    })
    targets::tar_make()
    targets::tar_read(example_results_pre_treatment)
    targets::tar_read(example_plot_PCA)
})
}
}
