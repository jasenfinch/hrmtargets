% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_spectral_binning.R
\name{tar_spectral_binning}
\alias{tar_spectral_binning}
\title{Spectral processing using spectral binning}
\usage{
tar_spectral_binning(
  name,
  mzML = NULL,
  sample_info = NULL,
  parameters = NULL,
  plots = c("chromatogram", "fingerprint", "TIC", "purity_dist", "centrality_dist"),
  verbose = TRUE,
  summary = TRUE,
  export_path = "exports/spectral_processing"
)
}
\arguments{
\item{name}{Symbol. The name for the collection of targets. This serves as a prefix for target names.}

\item{mzML}{A characer vector of mzML data file paths. If \code{NULL}, target input will be expected from an existing target. See details.}

\item{sample_info}{A tibble containing the sample information. See details for the specifications. If \code{NULL}, target input will be expected from an existing target. See details.}

\item{parameters}{S4 object of class \code{BinParameters}. If \code{NULL}, \code{binneR::detectParameters()} will be used to detect the spectral binning parameters automatically..}

\item{plots}{A character vector of plot types. Set to \code{NULL} to skip all plots.}

\item{verbose}{Show spectral processing console output.}

\item{summary}{Boolean. Include additional summary targets.}

\item{export_path}{Destination path of export files. Set to \code{NULL} to skip exports.}
}
\value{
A list of target objects for processing \code{mzML} data files using spectral binning.
}
\description{
Targets for spectral processing of FIE-HRMS data using spectral binning.
}
\details{
Specifying arguments \code{mzML} and \code{sample_info} as \code{NULL} enables the use of one of the data file and sample information from one of the input target factories, \code{tar_input_file_path()}, \code{tar_input_grover()} or \code{tar_input_piggyback()}. See the example using \code{tar_input_piggyback()} below.
}
\examples{
\dontrun{
## Perform spectral binning by specifying the file paths and sample information directly
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        file_paths <- metaboData::filePaths('FIE-HRMS','UrineTechnical',
                                            ask = FALSE)
        sample_info <- metaboData::runinfo('FIE-HRMS','UrineTechnical',
                                           ask = FALSE)
        
        list(
            tar_spectral_binning(example,
                                 mzML = file_paths,
                                 sample_info = sample_info)
        )
    })
    targets::tar_make()
    targets::tar_read(example_results_spectral_processing)
    targets::tar_read(example_plot_fingerprint)
})

## Perform spectral binning by using tar_input_piggyback() 
targets::tar_dir({
    targets::tar_script({
        library(hrmtargets)
        name <- rlang::expr(example)
        
        list(
            tar_input_piggyback(!!name,
                                'FIE-HRMS_BdistachyonTechnical',
                                repo = 'jasenfinch/metaboData'),
            tar_spectral_binning(!!name)
        )
    })
    targets::tar_make()
    targets::tar_read(example_results_spectral_processing)
    targets::tar_read(example_plot_fingerprint)
})
}
}
